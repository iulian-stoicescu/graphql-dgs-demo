plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.netflix.dgs.codegen" version "6.0.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
	packageName = 'com.example.graphqldgsdemo' // The package name to use to generate sources
	generateClient = true // Enable generating the type safe query API
}

repositories {
	mavenCentral()
}

dependencies {
	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release'))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
